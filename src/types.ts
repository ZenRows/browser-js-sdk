export type ClientOptions = {
  /* The ZenRows API key to use. Can be obtained from the ZenRows dashboard */
  apiKey?: string;
  /* The URL of the ZenRows' Scraping Browser API */
  apiURL?: string;
  /* Whether to use an insecure WebSocket connection */
  insecure?: boolean;
};

export type ConnectOptions = {
  /* Options to configure the proxy to use. Defaults to using worldwide
  residential proxies */
  proxy?: ProxyOptions;

  /* Maximum time in seconds to keep the browser session alive. After this
  time, the browser will be closed even if you forget to close it gracefully.
  This is useful to avoid leaving zombie browsers leading to uncontrolled usage
  costs.

  The minimum allowed value is 60 seconds (1 minute) and the maximum
  allowed value is 900 seconds (15 minutes). If not provided, the default
  session TTL will be used (3 minutes).
   */
  sessionTTL?: number;
};

export type ProxyOptions = {
  /* The location of the proxy to use. Can be either a country code or a
  region. See the ProxyCountry and ProxyRegion enums for valid values */
  location?: ProxyCountry | ProxyRegion;
};

export type ScreenshotOptions = {
  /* Whether to take a screenshot of the full page or just the viewport */
  fullPage?: boolean;
} & ConnectOptions;

export enum ProxyCountry {
  AF = "af",
  AL = "al",
  DZ = "dz",
  AS = "as",
  AD = "ad",
  AO = "ao",
  AI = "ai",
  AQ = "aq",
  AG = "ag",
  AR = "ar",
  AM = "am",
  AW = "aw",
  AU = "au",
  AT = "at",
  AZ = "az",
  BS = "bs",
  BH = "bh",
  BD = "bd",
  BB = "bb",
  BY = "by",
  BE = "be",
  BZ = "bz",
  BJ = "bj",
  BM = "bm",
  BT = "bt",
  BO = "bo",
  BA = "ba",
  BW = "bw",
  BV = "bv",
  BR = "br",
  IO = "io",
  BN = "bn",
  BG = "bg",
  BF = "bf",
  BI = "bi",
  KH = "kh",
  CM = "cm",
  CA = "ca",
  CV = "cv",
  KY = "ky",
  CF = "cf",
  TD = "td",
  CL = "cl",
  CN = "cn",
  CX = "cx",
  CC = "cc",
  CO = "co",
  KM = "km",
  CG = "cg",
  CD = "cd",
  CK = "ck",
  CR = "cr",
  CI = "ci",
  HR = "hr",
  CU = "cu",
  CY = "cy",
  CZ = "cz",
  DK = "dk",
  DJ = "dj",
  DM = "dm",
  DO = "do",
  TL = "tl",
  EC = "ec",
  EG = "eg",
  SV = "sv",
  GQ = "gq",
  ER = "er",
  EE = "ee",
  ET = "et",
  FK = "fk",
  FO = "fo",
  FJ = "fj",
  FI = "fi",
  FR = "fr",
  GF = "gf",
  PF = "pf",
  TF = "tf",
  GA = "ga",
  GM = "gm",
  GE = "ge",
  DE = "de",
  GH = "gh",
  GI = "gi",
  GB = "gb",
  GR = "gr",
  GL = "gl",
  GD = "gd",
  GP = "gp",
  GU = "gu",
  GT = "gt",
  GN = "gn",
  GW = "gw",
  GY = "gy",
  HT = "ht",
  HM = "hm",
  VA = "va",
  HN = "hn",
  HK = "hk",
  HU = "hu",
  IS = "is",
  IN = "in",
  ID = "id",
  IR = "ir",
  IQ = "iq",
  IE = "ie",
  IL = "il",
  IT = "it",
  JM = "jm",
  JP = "jp",
  JO = "jo",
  KZ = "kz",
  KE = "ke",
  KI = "ki",
  KP = "kp",
  KR = "kr",
  KW = "kw",
  KG = "kg",
  LA = "la",
  LV = "lv",
  LB = "lb",
  LS = "ls",
  LR = "lr",
  LY = "ly",
  LI = "li",
  LT = "lt",
  LU = "lu",
  MO = "mo",
  MK = "mk",
  MG = "mg",
  MW = "mw",
  MY = "my",
  MV = "mv",
  ML = "ml",
  MT = "mt",
  MH = "mh",
  MQ = "mq",
  MR = "mr",
  MU = "mu",
  YT = "yt",
  MX = "mx",
  FM = "fm",
  MD = "md",
  MC = "mc",
  MN = "mn",
  ME = "me",
  MS = "ms",
  MA = "ma",
  MZ = "mz",
  MM = "mm",
  NA = "na",
  NR = "nr",
  NP = "np",
  NL = "nl",
  AN = "an",
  NC = "nc",
  NZ = "nz",
  NI = "ni",
  NE = "ne",
  NG = "ng",
  NU = "nu",
  NF = "nf",
  MP = "mp",
  NO = "no",
  OM = "om",
  PK = "pk",
  PW = "pw",
  PA = "pa",
  PG = "pg",
  PY = "py",
  PE = "pe",
  PH = "ph",
  PN = "pn",
  PL = "pl",
  PT = "pt",
  PR = "pr",
  QA = "qa",
  RE = "re",
  RO = "ro",
  RU = "ru",
  RW = "rw",
  SH = "sh",
  KN = "kn",
  LC = "lc",
  PM = "pm",
  VC = "vc",
  WS = "ws",
  SM = "sm",
  ST = "st",
  SA = "sa",
  SN = "sn",
  SC = "sc",
  SL = "sl",
  SG = "sg",
  SK = "sk",
  SI = "si",
  SB = "sb",
  SO = "so",
  ZA = "za",
  GS = "gs",
  ES = "es",
  LK = "lk",
  SD = "sd",
  SR = "sr",
  SJ = "sj",
  SZ = "sz",
  SE = "se",
  CH = "ch",
  SY = "sy",
  TW = "tw",
  TJ = "tj",
  TZ = "tz",
  TH = "th",
  TG = "tg",
  TK = "tk",
  TO = "to",
  TT = "tt",
  TN = "tn",
  TR = "tr",
  TM = "tm",
  TC = "tc",
  TV = "tv",
  UG = "ug",
  UA = "ua",
  AE = "ae",
  US = "us",
  UY = "uy",
  UZ = "uz",
  VU = "vu",
  VE = "ve",
  VN = "vn",
  VG = "vg",
  VI = "vi",
  WF = "wf",
  EH = "eh",
  YE = "ye",
  ZM = "zm",
  ZW = "zw",
}

export enum ProxyRegion {
  Africa = "af",
  AsiaPacific = "ap",
  Europe = "eu",
  MiddleEast = "me",
  NorthAmerica = "na",
  SouthLatinAmerica = "sa",
}

export namespace ProxyRegion {
  export function isValid(region: string): region is ProxyRegion {
    return Object.values(ProxyRegion).includes(region as ProxyRegion);
  }
}

export namespace ProxyCountry {
  export function isValid(countryCode: string): countryCode is ProxyCountry {
    return Object.values(ProxyCountry).includes(countryCode as ProxyCountry);
  }
}
